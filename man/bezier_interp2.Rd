% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bezier.R
\name{bezier_interp2}
\alias{bezier_interp2}
\title{Interpolate a Bézier Curve}
\usage{
bezier_interp2(coords, start, steps)
}
\arguments{
\item{coords}{"data.frame" or "list" containing "x" and "y" columns
corresponding to the points in cubic Bézier, with \verb{3n} rows, where \code{n}
is the number of Bézier curves spliced together in an SVG path.  The
first item is the first control point, as the actual start point must be
retrieved from the prior element and provided to this function via the
\code{start} parameter.}

\item{start}{numeric(2) x and y coordinates for the start point of the Bézier}

\item{steps}{how many steps to use for each curve}
}
\description{
For each Bézier curve implied in \code{coords}, interpolate \code{steps} segments using
the formula taken from
\href{https://en.wikipedia.org/wiki/Bézier_curve}{Wikipedia}:
}
\details{
(1 - t)^3\emph{P0 + 3}(1 - t)^2\emph{t}P1 + 3*(1 - t)\emph{t^2}P2 + t^3*P3

where \code{P0} is the start point, \code{P1} and \code{P2} the controls, and \code{P3} the end
point.  The steps are computed by using evenly spread values of \code{t} between 0
and 1.
}

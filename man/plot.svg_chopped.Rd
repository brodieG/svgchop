% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.svg_chopped}
\alias{plot.svg_chopped}
\alias{plot.svg_chopped_flat}
\alias{plot.svg_chopped_list}
\alias{plot.svg_chopped_list_flat}
\title{Plot Method for "svg_chopped" Objects}
\usage{
\method{plot}{svg_chopped}(x, ppi = 96, ...)

\method{plot}{svg_chopped_flat}(x, ppi = 96, ...)

\method{plot}{svg_chopped_list}(
  x,
  ppi = 96,
  ask = prod(par("mfcol")) < length(x) && dev.interactive(),
  ...
)

\method{plot}{svg_chopped_list_flat}(
  x,
  ppi = 96,
  ask = prod(par("mfcol")) < length(x) && dev.interactive(),
  ...
)
}
\arguments{
\item{x}{an "svg_chopped" or "svg_chopped_list" object.}

\item{ppi}{numeric pixels per inch to assume for calculations.}

\item{...}{passed on to \code{\link[=polypath]{polypath()}} and/or \code{\link[=lines]{lines()}}.}

\item{ask}{TRUE or FALSE whether to prompt to display more plots when
plotting an "svg_chopped_list" with multiple elements that don't fit in the
current plotting grid.}
}
\value{
\code{x}, invisibly
}
\description{
Display an SVG plot object to the graphical device.  Renders closed polygons
with \code{\link[graphics:polypath]{graphics::polypath()}} and open ones with \code{\link[graphics:lines]{graphics::lines()}}.  Will set
the viewport to the SVG viewBox coordinates if they exist, and to the SVG
extent if they don't.  Aspect ratio is fixed so that user coordinates are 1:1
in x and y directions.  The "width", "height", "x", and "y" attributes of the
SVG element proper are ignored.
}
\details{
Nested SVGs viewports will not be respected and their contents will be drawn
in the outer viewport coordinates.  Maybe, this is untested.

Stroke widths are computed under the assumption that 1 "lwd" == 1/96th of an
inch, and may look bad on devices that don't support "lwd" values less than
one.

The "svg_chopped_list" method will call the "svg_chopped" method for each
item, passing along the "url-data" object that is attached as the "url"
attribute of the "svg_chopped_list" object.  If you set \code{par(mfrow=...)} or
similar each element of the list will be plotted in its own grid spot.

Future versions may switch to \code{grid} functions and take advantage of
viewports and the implementation of gradients, etc.
}
\seealso{
\code{\link[=process_svg]{process_svg()}}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.svg_chopped}
\alias{plot.svg_chopped}
\title{Plot Method for "svg_chopped" Objects}
\usage{
\method{plot}{svg_chopped}(
  x,
  ppi = getOption("svgchop.ppi", 125),
  scale = FALSE,
  center = TRUE,
  quietly = FALSE,
  xaxs = "i",
  yaxs = "i",
  mai = numeric(4),
  ...
)
}
\arguments{
\item{x}{an "svg_chopped" or "svg_chopped_list" object.}

\item{ppi}{numeric pixels per inch of the display device to assume for
calculations, defaults to 125 which is a common display density for retina
style displays (note these are "display" pixels, not screen pixels which
are ~2x denser).}

\item{scale}{TRUE or FALSE (default), whether to force the SVG to scale to
the display device.  If true, the image is adjusted to fill as much of the
device as possible while respecting the original aspect ratio.  This causes
the "viewBox", "width", and "height" attributes of the original SVG to be
ignored.}

\item{center}{TRUE (default)  or FALSE, whether to center the image on the
device.}

\item{...}{used to set graphical parameters with \code{\link[graphics:par]{graphics::par()}}.}

\item{ask}{NULL (default) TRUE or FALSE whether to prompt to display more
plots when plotting an "svg_chopped_list" with multiple elements that don't
fit in the current plotting grid.  If NULL, auto-detects based on how many
elements there are to draw and whether they fit in the grid implied by
\code{prod(par('mfrow'))}.}
}
\value{
\code{x}, invisibly
}
\description{
Display an SVG plot object to the graphical device.  Renders closed polygons
with \code{\link[graphics:polypath]{graphics::polypath()}} and open ones with \code{\link[graphics:lines]{graphics::lines()}}.  Will set
the viewport to the SVG viewBox coordinates if they exist, and to the SVG
extent if they don't.  Aspect ratio is fixed so that user coordinates are 1:1
in x and y directions.  The "width", "height", "x", and "y" attributes of the
SVG element proper are ignored.
}
\details{
Stroke widths are computed under the assumption that 1 "lwd" == 1/96th of an
inch, and may look bad on devices that don't support "lwd" values less than
one.  Future versions may switch to \code{grid} functions and take advantage of
viewports, gradients, patterns, etc.
}
\examples{
\donttest{
svg <- chop(R_logo())
plot(svg)
plot(svg, ppi=75)       # fat pixels
plot(svg, scale=TRUE)   # fit to device

## Plot multiple svgs at once (chop_all is for all SVGS in
## a single XML doc, not multiple SVG docs)
svgs <- as.svg_chopped_list(lapply(svg_samples()[1:4], chop))
plot(svgs, mfrow=c(2,2), mai=rep(.1, 4), scale=TRUE)
}
}
\seealso{
\code{\link[=chop]{chop()}} in particular the "Unsupported Features" section,
\code{\link[graphics:par]{graphics::par()}} for other general graphical settings,
\code{\link[graphics:polypath]{graphics::polypath()}}, \code{\link[graphics:lines]{graphics::lines()}}, for how the polygons and
their line strokes are drawn, \code{\link[=compute_display_params]{compute_display_params()}} for how
the SVG is sized, \code{\link[=as.svg_chopped_list]{as.svg_chopped_list()}} to convert a list of
"svg_chopped" objects into a plottable version of it, \code{\link[=svg_samples]{svg_samples()}} for
sample SVG files that ship with this package.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interp.R
\name{bezier_interp}
\alias{bezier_interp}
\alias{bezier_interp_even}
\title{Interpolate a single bezier curve}
\usage{
bezier_interp(coords, steps = 10, dev = TRUE)

bezier_interp_even(coords, steps = 10, mult = 10, dev = TRUE)
}
\arguments{
\item{coords}{a list with x and y coords only in that order.}

\item{steps}{integer(1) how many equal size steps to interpolate along.}

\item{dev}{whether to spawn a new device (an open device is needed for
conversions to/from NPC to work.}

\item{mult}{how many more times to subivide per \code{steps} when looking for an
even interpolation.}
}
\value{
a list of NPC coordinats of the points along the input curve.
}
\description{
Thin wrapper around \code{BezierGrob} / \code{BezierPoints}, but ensures result comes
out in npc units.  \code{bezier_interp_even} returns "evenly" spaced points.  It
works by subdividing the bezier according to the \code{t} parameter in \code{mult} as
many segments as \code{steps} provided, and then interpolates along the resulting
piecewise linear (yes, a nasty hack).
}
